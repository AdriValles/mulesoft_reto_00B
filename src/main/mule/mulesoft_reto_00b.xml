<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:os="http://www.mulesoft.org/schema/mule/os" xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core"
	xmlns:http="http://www.mulesoft.org/schema/mule/http"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/os http://www.mulesoft.org/schema/mule/os/current/mule-os.xsd">
	<flow name="mulesoft_reto_00bFlow" doc:id="ab71653d-f681-47d9-906a-726e4db0caff" >
		<http:listener doc:name="Listener" doc:id="b87e983e-e388-484d-913b-e16c4ad1a168" path="/api" config-ref="HTTP_Listener_config1"/>
		<set-variable value="#[payload.key]" doc:name="searchKey" doc:id="3bc5f789-099b-45e8-b31c-f7d894d7f8cc" variableName="searchKey"/>
		<!-- [STUDIO:"X HTTP Request"]<http:request method="GET" doc:name="X HTTP Request" doc:id="374a45e4-5304-4c6f-8c0d-d96eead69379" config-ref="HTTP_Request_configuration_X" path="/2/tweets/search/recent">
			<http:headers ><![CDATA[#[output application/java
&#45;&#45;-
{
    "Authorization": "Bearer " ++ p('twitter.bearer')
}&#93;&#93;&#93;></http:headers>
			<http:query-params ><![CDATA[#[output application/java
&#45;&#45;-
{
	"lang" : "es,en,pt",
	"max_results" : 10,
	"query" : payload.searchKey
}&#93;&#93;&#93;></http:query-params>
		</http:request> [STUDIO] -->
		<flow-ref doc:name="handle-auth-token" doc:id="c099459f-0a8f-4979-8b2a-d9aba6fea69a" name="handle-auth-token"/>
		<flow-ref doc:name="make-auth-request" doc:id="984681e8-5fb6-41e4-9a76-d885d198d78f" name="make-auth-request" />
		<ee:transform doc:name="Transform Message" doc:id="3bf83f9d-c248-4346-85a1-2996249f7735">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
payload.posts map $.record.text
]]></ee:set-payload>
			</ee:message>
		</ee:transform>
	</flow>
	<flow name="make-auth-request" doc:id="81702f67-746b-4651-9ea2-4105edb43f95" >
		<try doc:name="Try" doc:id="455b05b8-2cb8-47ac-9d79-2c9c8192f9a1">
			<http:request method="GET" doc:name="Bluesky HTTP Request" doc:id="000ced76-b41f-4807-8e24-84907342ac02" config-ref="HTTP_Request_configuration_Bluesky" path="/xrpc/app.bsky.feed.searchPosts" sendCorrelationId="ALWAYS">
    <http:headers><![CDATA[#[{
    "Authorization": "Bearer " ++ vars.accessJwt,
    "Accept": "application/json"
}]]]></http:headers>
			<http:query-params><![CDATA[#[{
    "q": vars.searchKey,
    "limit": "10"
}]]]></http:query-params>
</http:request>
			<error-handler>
				<on-error-continue enableNotifications="true" logException="true" doc:name="On Error Continue" doc:id="e5f846ab-715e-46df-8080-6c8339cf5573">
					<choice doc:name="Choice" doc:id="68fe14ce-921b-47ab-a5e3-37b319c35885">
						<when expression="#[error.statusCode == 401]">
							<logger level="INFO" doc:name="Logger" doc:id="83014212-5ff8-4123-9277-d9240c652735" message="Token expired or invalid, regenerating..."/>
							<flow-ref doc:name="bsky-auth-ref" doc:id="2e01db59-85b0-42c9-8c4b-bfabe6d0398a" name="bsky-auth" />
							<http:request method="GET" doc:name="Bluesky HTTP Request" doc:id="d98a48ce-9109-44b6-9002-c31eb35bb31b" config-ref="HTTP_Request_configuration_Bluesky" path="/xrpc/app.bsky.feed.searchPosts" sendCorrelationId="ALWAYS">
								<http:headers><![CDATA[#[{
    "Authorization": "Bearer " ++ vars.accessJwt,
    "Accept": "application/json"
}]]]></http:headers>
								<http:query-params><![CDATA[#[{
    "q": vars.searchKey,
    "limit": "10"
}]]]></http:query-params>
							</http:request>
						</when>
						<otherwise>
							<logger level="ERROR" doc:name="Logger" doc:id="edbf6b0f-7451-4a00-b5e5-adb7e9d3b1da" message="Error inesperado: #[error.message]" />
						</otherwise>
					</choice>
				</on-error-continue>
			</error-handler>
		</try>
	</flow>
	<flow name="handle-auth-token" doc:id="e2d94fdb-91b1-44bf-84b5-fb28c45298bc" >
		<os:retrieve doc:name="Retrieve" doc:id="9676db71-3966-4d30-91d9-9cdec8470262" key="accessJwt" target="accessJwt" objectStore="Object_store">
			<os:default-value><![CDATA[null]]></os:default-value>
		</os:retrieve>
		<choice doc:name="Choice" doc:id="7dd8daf4-2797-409d-8811-ee18a5be5477">
			<when expression='#[vars.accessJwt == "null"]'>
				<flow-ref doc:name="bsky-auth-ref" doc:id="6bec3286-6c41-4322-b92e-cf38f2904b6b" name="bsky-auth" />
			</when>
			<otherwise >
				<logger level="INFO" doc:name="Logger" doc:id="d6bb2b84-0c98-4553-9de1-41285312e833" message="Token already exists"/>
			</otherwise>
		</choice>
	</flow>
	<flow name="bsky-auth" doc:id="42590c9b-5677-48a6-87eb-edace3fd8448" >
		<http:request method="POST" doc:name="Request" doc:id="9b05aa68-de91-4a46-b271-d116acc3c769" config-ref="HTTP_Request_configuration_Bluesky" path="xrpc/com.atproto.server.createSession">
			<http:body><![CDATA[#[%dw 2.0
output application/json
---
{
    "identifier": p('bluesky.username'),
    "password": p('bluesky.apppassword')
}]]]></http:body>
			<http:headers><![CDATA[#[output application/java
---
{
	"Content-Type" : "application/json"
}]]]></http:headers>
		</http:request>

		<os:store doc:name="Store" doc:id="9b9ff742-16a7-41eb-b64c-7c144ecf5a25" key="accessJwt" objectStore="Object_store">
			<os:value ><![CDATA[#[payload.accessJwt]]]></os:value>
		</os:store>
	</flow>
</mule>
